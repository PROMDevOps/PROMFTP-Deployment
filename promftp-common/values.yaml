kong:
  enabled: true
  replicaCount: 1
  fullnameOverride: kong
  proxy:
    type: ClusterIP

  dblessConfig:
    configMap: kong-config

  env:
    database: "off"

  customEnv:
    DUMMY: "001" #Update this when Kong configuration is changed in order to restart the pods

  ingressController:
    enabled: false # This is required in DB less mode

  admin:
    enabled: true
    type: ClusterIP
    http:
      enabled: true

logstash-http-to-kafka:
  enabled: true
  antiAffinity: soft

  fullnameOverride: logstash-http-to-kafka
  replicas: 2

  resources:
    requests:
      cpu: "100m"
      memory: "1Gi"
    limits:
      cpu: "2000m"
      memory: "2Gi"

  logstashJavaOpts: "-Xmx2g -Xms2g"

  service:
    ports:
      - name: http-input
        port: 8080
        targetPort: 8080
        protocol: TCP

  extraEnvs:
    - name: DUMMY
      value: "001"

  logstashConfig:
    logstash.yml: |
      http.host: "0.0.0.0"
      pipeline.ecs_compatibility: "disabled"

  logstashPipeline:
    logstash.conf: |
      input {
        http {
          id => "http_input"
          codec => "json_lines"
          port => "8080"
        }
      }

      filter {
        geoip {
          source => "[headers][x_real_ip]"
        }

        mutate {
            rename => {"headers" => "http_headers"}
        }
      }

      output {
        #stdout { codec => json_lines }

        kafka {
          bootstrap_servers => "kafka:9092"
          codec => json
          topic_id => "prom-ftp"
        }
      }

vector-kafka-to-loki:
  enabled: true
  fullnameOverride: vector-kafka-to-loki
  replicas: 1
  persistence:
    enabled: true
  env:
    - name: DUMMY
      value: "001"

    - name: GRAFANA_LOKI_USER
      valueFrom:
        secretKeyRef:
          name: vector-credentials
          key: GRAFANA_LOKI_USER

    - name: GRAFANA_LOKI_PASSWORD
      valueFrom:
        secretKeyRef:
          name: vector-credentials
          key: GRAFANA_LOKI_PASSWORD

    - name: ENVIRONMENT
      valueFrom:
        secretKeyRef:
          name: vector-credentials
          key: ENVIRONMENT

  service:
    enabled: false
  serviceAccount:
    create: true
  rbac:
    create: true
  extraVolumeMounts:
    - name: scripts
      mountPath: /scripts/
      readOnly: true
  extraVolumes:
    - name: scripts
      configMap:
        name: vector-filter-cm

  customConfig:
    data_dir: "/vector-data-dir" #Do not change this if you don't know the impact
    sources:
      internal_metrics:
        type: internal_metrics

      kafka_from_http:
        type: kafka
        bootstrap_servers: "kafka:9092"
        group_id: "to-loki"
        topics: [ "prom-ftp" ]
        decoding:
          codec: json
  
    transforms:
      process_kafka_to_loki:
        type: remap
        file: "/scripts/process_kafka_to_loki.vrl"
        inputs:
          - kafka_from_http

    sinks:
      #stdout_raw:
      #  type: console
      #  inputs: [kafka_from_http]
      #  encoding:
      #    codec: json

      loki:
        type: "loki"
        inputs: [process_kafka_to_loki]
        encoding:
          codec: json
        endpoint: "https://logs-prod-011.grafana.net/"
        auth:
          strategy: basic
          user: '475784'
          password: ${GRAFANA_LOKI_PASSWORD}
        labels:
          category: 'prom-ftp'
          environment: >-
            {{ printf "{{ platform_environment }}" }}
          host: >-
            {{ printf "{{ http_headers.x_forwarded_host }}" }}
          method: >-
            {{ printf "{{ http_headers.request_method }}" }}

### Kafka ###
kafka:
  enabled: true
  fullnameOverride: kafka
  provisioning:
    enabled: true
    topics:
      - name: prom-ftp
        partitions: 1
        replicationFactor: 1
        ## https://kafka.apache.org/documentation/#topicconfigs
        config:
          max.message.bytes: 64000

kafka-ui:
  enabled: true
  fullnameOverride: kafka-ui
  existingSecret: kafka-ui-credential
  envs:
    config:
      KAFKA_CLUSTERS_0_NAME: kafka-sftp
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_READONLY: "false"
      AUTH_TYPE: "LOGIN_FORM" #"DISABLED"
      SECURITY_BASIC_ENABLED: "true"

sftp:
  replicaCount: 1
  nameOverride: "sftp-gcs"
  fullnameOverride: "sftp-gcs"

  users:
    - user: demo
      bucket: prom-services-ftp
      onlyDir: demo

  service:
    type: NodePort
    port: 2022
    nodePort: 32022
    annotations: {}

  image:
    repository: danuk/k8s-sftp-gcs
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    privileged: true
    capabilities:
      add:
      - SYS_ADMIN

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}